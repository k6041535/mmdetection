2023-03-15 10:37:02,428 - mmdet - INFO - Environment info:
------------------------------------------------------------
sys.platform: win32
Python: 3.8.16 (default, Mar  2 2023, 03:18:16) [MSC v.1916 64 bit (AMD64)]
CUDA available: True
GPU 0: NVIDIA GeForce RTX 3060
CUDA_HOME: D:\Anaconda\envs\openmmlab
NVCC: Cuda compilation tools, release 11.7, V11.7.99
MSVC: Microsoft (R) C/C++ Optimizing Compiler Version 19.35.32215 for x64
GCC: n/a
PyTorch: 1.13.1
PyTorch compiling details: PyTorch built with:
  - C++ Version: 199711
  - MSVC 192829337
  - Intel(R) Math Kernel Library Version 2020.0.2 Product Build 20200624 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 2019
  - LAPACK is enabled (usually provided by MKL)
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.5.4
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=C:/cb/pytorch_1000000000000/work/tmp_bin/sccache-cl.exe, CXX_FLAGS=/DWIN32 /D_WINDOWS /GR /EHsc /w /bigobj -DUSE_PTHREADPOOL -openmp:experimental -IC:/cb/pytorch_1000000000000/work/mkl/include -DNDEBUG -DUSE_KINETO -DLIBKINETO_NOCUPTI -DUSE_FBGEMM -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=OFF, USE_NNPACK=OFF, USE_OPENMP=ON, USE_ROCM=OFF, 

TorchVision: 0.14.1
OpenCV: 4.7.0
MMCV: 1.7.1
MMCV Compiler: MSVC 192829924
MMCV CUDA Compiler: 11.7
MMDetection: 2.28.2+e9cae2d
------------------------------------------------------------

2023-03-15 10:37:02,574 - mmdet - INFO - Distributed training: False
2023-03-15 10:37:02,763 - mmdet - INFO - Config:
model = dict(
    type='FasterRCNN',
    backbone=dict(
        type='ResNet',
        depth=50,
        num_stages=4,
        out_indices=(0, 1, 2, 3),
        frozen_stages=1,
        norm_cfg=dict(type='BN', requires_grad=True),
        norm_eval=True,
        style='pytorch',
        init_cfg=dict(type='Pretrained', checkpoint='torchvision://resnet50')),
    neck=dict(
        type='FPN',
        in_channels=[256, 512, 1024, 2048],
        out_channels=256,
        num_outs=5),
    rpn_head=dict(
        type='RPNHead',
        in_channels=256,
        feat_channels=256,
        anchor_generator=dict(
            type='AnchorGenerator',
            scales=[8],
            ratios=[0.5, 1.0, 2.0],
            strides=[4, 8, 16, 32, 64]),
        bbox_coder=dict(
            type='DeltaXYWHBBoxCoder',
            target_means=[0.0, 0.0, 0.0, 0.0],
            target_stds=[1.0, 1.0, 1.0, 1.0]),
        loss_cls=dict(
            type='CrossEntropyLoss', use_sigmoid=True, loss_weight=1.0),
        loss_bbox=dict(type='L1Loss', loss_weight=1.0)),
    roi_head=dict(
        type='StandardRoIHead',
        bbox_roi_extractor=dict(
            type='SingleRoIExtractor',
            roi_layer=dict(type='RoIAlign', output_size=7, sampling_ratio=0),
            out_channels=256,
            featmap_strides=[4, 8, 16, 32]),
        bbox_head=dict(
            type='Shared2FCBBoxHead',
            in_channels=256,
            fc_out_channels=1024,
            roi_feat_size=7,
            num_classes=1,
            bbox_coder=dict(
                type='DeltaXYWHBBoxCoder',
                target_means=[0.0, 0.0, 0.0, 0.0],
                target_stds=[0.1, 0.1, 0.2, 0.2]),
            reg_class_agnostic=False,
            loss_cls=dict(
                type='CrossEntropyLoss', use_sigmoid=False, loss_weight=1.0),
            loss_bbox=dict(type='L1Loss', loss_weight=1.0))),
    train_cfg=dict(
        rpn=dict(
            assigner=dict(
                type='MaxIoUAssigner',
                pos_iou_thr=0.7,
                neg_iou_thr=0.3,
                min_pos_iou=0.3,
                match_low_quality=True,
                ignore_iof_thr=-1),
            sampler=dict(
                type='RandomSampler',
                num=256,
                pos_fraction=0.5,
                neg_pos_ub=-1,
                add_gt_as_proposals=False),
            allowed_border=-1,
            pos_weight=-1,
            debug=False),
        rpn_proposal=dict(
            nms_pre=2000,
            max_per_img=1000,
            nms=dict(type='nms', iou_threshold=0.7),
            min_bbox_size=0),
        rcnn=dict(
            assigner=dict(
                type='MaxIoUAssigner',
                pos_iou_thr=0.5,
                neg_iou_thr=0.5,
                min_pos_iou=0.5,
                match_low_quality=False,
                ignore_iof_thr=-1),
            sampler=dict(
                type='RandomSampler',
                num=512,
                pos_fraction=0.25,
                neg_pos_ub=-1,
                add_gt_as_proposals=True),
            pos_weight=-1,
            debug=False)),
    test_cfg=dict(
        rpn=dict(
            nms_pre=1000,
            max_per_img=1000,
            nms=dict(type='nms', iou_threshold=0.7),
            min_bbox_size=0),
        rcnn=dict(
            score_thr=0.05,
            nms=dict(type='nms', iou_threshold=0.5),
            max_per_img=100)))
dataset_type = 'CocoDataset'
data_root = 'coco/'
img_norm_cfg = dict(
    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(type='LoadAnnotations', with_bbox=True),
    dict(type='Resize', img_scale=(1333, 800), keep_ratio=True),
    dict(type='RandomFlip', flip_ratio=0.5),
    dict(
        type='Normalize',
        mean=[123.675, 116.28, 103.53],
        std=[58.395, 57.12, 57.375],
        to_rgb=True),
    dict(type='Pad', size_divisor=32),
    dict(type='DefaultFormatBundle'),
    dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])
]
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(
        type='MultiScaleFlipAug',
        img_scale=(1333, 800),
        flip=False,
        transforms=[
            dict(type='Resize', keep_ratio=True),
            dict(type='RandomFlip'),
            dict(
                type='Normalize',
                mean=[123.675, 116.28, 103.53],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='Pad', size_divisor=32),
            dict(type='ImageToTensor', keys=['img']),
            dict(type='Collect', keys=['img'])
        ])
]
data = dict(
    samples_per_gpu=4,
    workers_per_gpu=2,
    train=dict(
        type='CocoDataset',
        ann_file='datasets/coco/annotations/instances_train2017.json',
        img_prefix='coco/train2017',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(type='LoadAnnotations', with_bbox=True),
            dict(type='Resize', img_scale=(1333, 800), keep_ratio=True),
            dict(type='RandomFlip', flip_ratio=0.5),
            dict(
                type='Normalize',
                mean=[123.675, 116.28, 103.53],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='Pad', size_divisor=32),
            dict(type='DefaultFormatBundle'),
            dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])
        ],
        classes=('Xray', )),
    val=dict(
        type='CocoDataset',
        ann_file='coco/annotations/instances_val2017.json',
        img_prefix='coco/val2017',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(
                type='MultiScaleFlipAug',
                img_scale=(1333, 800),
                flip=False,
                transforms=[
                    dict(type='Resize', keep_ratio=True),
                    dict(type='RandomFlip'),
                    dict(
                        type='Normalize',
                        mean=[123.675, 116.28, 103.53],
                        std=[58.395, 57.12, 57.375],
                        to_rgb=True),
                    dict(type='Pad', size_divisor=32),
                    dict(type='ImageToTensor', keys=['img']),
                    dict(type='Collect', keys=['img'])
                ])
        ],
        classes=('Xray', )),
    test=dict(
        type='CocoDataset',
        ann_file='coco/annotations/instances_val2017.json',
        img_prefix='coco/val2017',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(
                type='MultiScaleFlipAug',
                img_scale=(1333, 800),
                flip=False,
                transforms=[
                    dict(type='Resize', keep_ratio=True),
                    dict(type='RandomFlip'),
                    dict(
                        type='Normalize',
                        mean=[123.675, 116.28, 103.53],
                        std=[58.395, 57.12, 57.375],
                        to_rgb=True),
                    dict(type='Pad', size_divisor=32),
                    dict(type='ImageToTensor', keys=['img']),
                    dict(type='Collect', keys=['img'])
                ])
        ],
        classes=('Xray', )))
evaluation = dict(interval=1, metric='bbox')
optimizer = dict(type='SGD', lr=0.02, momentum=0.9, weight_decay=0.0001)
optimizer_config = dict(grad_clip=None)
lr_config = dict(
    policy='step',
    warmup='linear',
    warmup_iters=500,
    warmup_ratio=0.001,
    step=[8, 11])
runner = dict(type='EpochBasedRunner', max_epochs=10)
checkpoint_config = dict(interval=5)
log_config = dict(interval=5, hooks=[dict(type='TextLoggerHook')])
custom_hooks = [dict(type='NumClassCheckHook')]
dist_params = dict(backend='nccl')
log_level = 'INFO'
load_from = None
resume_from = None
workflow = [('train', 1)]
opencv_num_threads = 0
mp_start_method = 'fork'
auto_scale_lr = dict(enable=False, base_batch_size=32)
classes = ('Xray', )
work_dir = 'C:/Users/user/mmdetection/checkpoints'
auto_resume = True
gpu_ids = range(0, 1)

2023-03-15 10:37:02,772 - mmdet - INFO - Set random seed to 498184199, deterministic: False
2023-03-15 10:37:03,289 - mmdet - INFO - Automatic scaling of learning rate (LR) has been disabled.
2023-03-15 10:37:03,301 - mmdet - INFO - Start running, host: user@RADWCTAHY, work_dir: C:\Users\user\mmdetection\checkpoints
2023-03-15 10:37:03,301 - mmdet - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) StepLrUpdaterHook                  
(NORMAL      ) CheckpointHook                     
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) StepLrUpdaterHook                  
(NORMAL      ) NumClassCheckHook                  
(LOW         ) IterTimerHook                      
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_train_iter:
(VERY_HIGH   ) StepLrUpdaterHook                  
(LOW         ) IterTimerHook                      
 -------------------- 
after_train_iter:
(ABOVE_NORMAL) OptimizerHook                      
(NORMAL      ) CheckpointHook                     
(LOW         ) IterTimerHook                      
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) CheckpointHook                     
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_val_epoch:
(NORMAL      ) NumClassCheckHook                  
(LOW         ) IterTimerHook                      
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_val_iter:
(LOW         ) IterTimerHook                      
 -------------------- 
after_val_iter:
(LOW         ) IterTimerHook                      
 -------------------- 
after_val_epoch:
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
after_run:
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
2023-03-15 10:37:03,303 - mmdet - INFO - workflow: [('train', 1)], max: 10 epochs
2023-03-15 10:37:03,304 - mmdet - INFO - Checkpoints will be saved to C:\Users\user\mmdetection\checkpoints by HardDiskBackend.
2023-03-15 10:37:31,862 - mmdet - INFO - Epoch [1][5/15]	lr: 1.798e-04, eta: 0:13:41, time: 5.669, data_time: 1.537, memory: 6545, loss_rpn_cls: 0.6797, loss_rpn_bbox: 0.0129, loss_cls: 0.7419, acc: 39.2383, loss_bbox: 0.0293, loss: 1.4638
2023-03-15 10:37:36,270 - mmdet - INFO - Epoch [1][10/15]	lr: 3.796e-04, eta: 0:07:38, time: 0.883, data_time: 0.049, memory: 6545, loss_rpn_cls: 0.6747, loss_rpn_bbox: 0.0129, loss_cls: 0.1655, acc: 98.7500, loss_bbox: 0.0308, loss: 0.8840
2023-03-15 10:37:40,757 - mmdet - INFO - Exp name: faster_rcnn_r50_fpn_1x_Xray.py
2023-03-15 10:37:40,757 - mmdet - INFO - Epoch [1][15/15]	lr: 5.794e-04, eta: 0:05:35, time: 0.898, data_time: 0.047, memory: 6545, loss_rpn_cls: 0.6578, loss_rpn_bbox: 0.0104, loss_cls: 0.1109, acc: 98.3887, loss_bbox: 0.0393, loss: 0.8184
2023-03-15 10:38:01,243 - mmdet - INFO - Epoch [2][5/15]	lr: 7.792e-04, eta: 0:06:05, time: 3.783, data_time: 2.871, memory: 6545, loss_rpn_cls: 0.6213, loss_rpn_bbox: 0.0075, loss_cls: 0.1655, acc: 97.7930, loss_bbox: 0.0569, loss: 0.8511
2023-03-15 10:38:06,062 - mmdet - INFO - Epoch [2][10/15]	lr: 9.790e-04, eta: 0:05:04, time: 0.963, data_time: 0.044, memory: 6545, loss_rpn_cls: 0.5663, loss_rpn_bbox: 0.0074, loss_cls: 0.1617, acc: 97.5488, loss_bbox: 0.0685, loss: 0.8039
2023-03-15 10:38:10,659 - mmdet - INFO - Exp name: faster_rcnn_r50_fpn_1x_Xray.py
2023-03-15 10:38:10,659 - mmdet - INFO - Epoch [2][15/15]	lr: 1.179e-03, eta: 0:04:22, time: 0.920, data_time: 0.047, memory: 6545, loss_rpn_cls: 0.4767, loss_rpn_bbox: 0.0067, loss_cls: 0.1405, acc: 97.3242, loss_bbox: 0.0837, loss: 0.7075
2023-03-15 10:38:22,132 - mmdet - INFO - Epoch [3][5/15]	lr: 1.379e-03, eta: 0:04:11, time: 2.201, data_time: 1.283, memory: 6545, loss_rpn_cls: 0.2881, loss_rpn_bbox: 0.0067, loss_cls: 0.1602, acc: 96.0352, loss_bbox: 0.1459, loss: 0.6010
2023-03-15 10:38:26,721 - mmdet - INFO - Epoch [3][10/15]	lr: 1.578e-03, eta: 0:03:43, time: 0.920, data_time: 0.046, memory: 6545, loss_rpn_cls: 0.1117, loss_rpn_bbox: 0.0069, loss_cls: 0.1803, acc: 95.0684, loss_bbox: 0.1890, loss: 0.4879
2023-03-15 10:38:31,301 - mmdet - INFO - Exp name: faster_rcnn_r50_fpn_1x_Xray.py
2023-03-15 10:38:31,301 - mmdet - INFO - Epoch [3][15/15]	lr: 1.778e-03, eta: 0:03:20, time: 0.913, data_time: 0.043, memory: 6545, loss_rpn_cls: 0.0572, loss_rpn_bbox: 0.0065, loss_cls: 0.1738, acc: 94.3262, loss_bbox: 0.2150, loss: 0.4525
2023-03-15 10:38:42,901 - mmdet - INFO - Epoch [4][5/15]	lr: 1.978e-03, eta: 0:03:13, time: 2.230, data_time: 1.283, memory: 6545, loss_rpn_cls: 0.0423, loss_rpn_bbox: 0.0064, loss_cls: 0.1450, acc: 93.4082, loss_bbox: 0.2631, loss: 0.4568
2023-03-15 10:38:47,530 - mmdet - INFO - Epoch [4][10/15]	lr: 2.178e-03, eta: 0:02:55, time: 0.923, data_time: 0.044, memory: 6545, loss_rpn_cls: 0.0381, loss_rpn_bbox: 0.0061, loss_cls: 0.1140, acc: 94.9609, loss_bbox: 0.2378, loss: 0.3961
2023-03-15 10:38:52,101 - mmdet - INFO - Exp name: faster_rcnn_r50_fpn_1x_Xray.py
2023-03-15 10:38:52,101 - mmdet - INFO - Epoch [4][15/15]	lr: 2.378e-03, eta: 0:02:39, time: 0.914, data_time: 0.045, memory: 6545, loss_rpn_cls: 0.0327, loss_rpn_bbox: 0.0058, loss_cls: 0.1128, acc: 94.9121, loss_bbox: 0.2432, loss: 0.3944
2023-03-15 10:39:03,509 - mmdet - INFO - Epoch [5][5/15]	lr: 2.577e-03, eta: 0:02:33, time: 2.191, data_time: 1.265, memory: 6545, loss_rpn_cls: 0.0277, loss_rpn_bbox: 0.0054, loss_cls: 0.0949, acc: 95.2148, loss_bbox: 0.2377, loss: 0.3657
2023-03-15 10:39:08,112 - mmdet - INFO - Epoch [5][10/15]	lr: 2.777e-03, eta: 0:02:19, time: 0.920, data_time: 0.044, memory: 6545, loss_rpn_cls: 0.0222, loss_rpn_bbox: 0.0054, loss_cls: 0.0853, acc: 96.8652, loss_bbox: 0.2187, loss: 0.3316
2023-03-15 10:39:12,740 - mmdet - INFO - Exp name: faster_rcnn_r50_fpn_1x_Xray.py
2023-03-15 10:39:12,740 - mmdet - INFO - Epoch [5][15/15]	lr: 2.977e-03, eta: 0:02:06, time: 0.926, data_time: 0.047, memory: 6545, loss_rpn_cls: 0.0182, loss_rpn_bbox: 0.0061, loss_cls: 0.0657, acc: 97.5879, loss_bbox: 0.1886, loss: 0.2785
2023-03-15 10:39:12,978 - mmdet - INFO - Saving checkpoint at 5 epochs
2023-03-15 10:39:26,410 - mmdet - INFO - Epoch [6][5/15]	lr: 3.177e-03, eta: 0:02:00, time: 2.241, data_time: 1.311, memory: 6545, loss_rpn_cls: 0.0154, loss_rpn_bbox: 0.0060, loss_cls: 0.0415, acc: 98.5254, loss_bbox: 0.1439, loss: 0.2068
2023-03-15 10:39:31,073 - mmdet - INFO - Epoch [6][10/15]	lr: 3.377e-03, eta: 0:01:48, time: 0.933, data_time: 0.046, memory: 6545, loss_rpn_cls: 0.0110, loss_rpn_bbox: 0.0060, loss_cls: 0.0386, acc: 98.4766, loss_bbox: 0.1109, loss: 0.1667
2023-03-15 10:39:35,751 - mmdet - INFO - Exp name: faster_rcnn_r50_fpn_1x_Xray.py
2023-03-15 10:39:35,751 - mmdet - INFO - Epoch [6][15/15]	lr: 3.576e-03, eta: 0:01:37, time: 0.936, data_time: 0.044, memory: 6545, loss_rpn_cls: 0.0075, loss_rpn_bbox: 0.0058, loss_cls: 0.0289, acc: 98.7305, loss_bbox: 0.0950, loss: 0.1372
2023-03-15 10:39:48,512 - mmdet - INFO - Epoch [7][5/15]	lr: 3.776e-03, eta: 0:01:31, time: 2.238, data_time: 1.291, memory: 6545, loss_rpn_cls: 0.0090, loss_rpn_bbox: 0.0057, loss_cls: 0.0297, acc: 98.7891, loss_bbox: 0.0835, loss: 0.1279
2023-03-15 10:39:53,112 - mmdet - INFO - Epoch [7][10/15]	lr: 3.976e-03, eta: 0:01:21, time: 0.920, data_time: 0.046, memory: 6545, loss_rpn_cls: 0.0061, loss_rpn_bbox: 0.0058, loss_cls: 0.0317, acc: 98.8867, loss_bbox: 0.0842, loss: 0.1278
2023-03-15 10:39:57,666 - mmdet - INFO - Exp name: faster_rcnn_r50_fpn_1x_Xray.py
2023-03-15 10:39:57,666 - mmdet - INFO - Epoch [7][15/15]	lr: 4.176e-03, eta: 0:01:11, time: 0.913, data_time: 0.043, memory: 6545, loss_rpn_cls: 0.0051, loss_rpn_bbox: 0.0055, loss_cls: 0.0286, acc: 98.7793, loss_bbox: 0.0869, loss: 0.1261
2023-03-15 10:40:09,032 - mmdet - INFO - Epoch [8][5/15]	lr: 4.376e-03, eta: 0:01:04, time: 2.178, data_time: 1.264, memory: 6545, loss_rpn_cls: 0.0059, loss_rpn_bbox: 0.0052, loss_cls: 0.0272, acc: 98.8965, loss_bbox: 0.0782, loss: 0.1165
2023-03-15 10:40:13,581 - mmdet - INFO - Epoch [8][10/15]	lr: 4.575e-03, eta: 0:00:55, time: 0.909, data_time: 0.043, memory: 6545, loss_rpn_cls: 0.0041, loss_rpn_bbox: 0.0047, loss_cls: 0.0312, acc: 98.7793, loss_bbox: 0.0786, loss: 0.1187
2023-03-15 10:40:18,119 - mmdet - INFO - Exp name: faster_rcnn_r50_fpn_1x_Xray.py
2023-03-15 10:40:18,119 - mmdet - INFO - Epoch [8][15/15]	lr: 4.775e-03, eta: 0:00:46, time: 0.908, data_time: 0.045, memory: 6545, loss_rpn_cls: 0.0044, loss_rpn_bbox: 0.0048, loss_cls: 0.0257, acc: 98.8672, loss_bbox: 0.0587, loss: 0.0936
2023-03-15 10:40:29,629 - mmdet - INFO - Epoch [9][5/15]	lr: 4.975e-04, eta: 0:00:39, time: 2.214, data_time: 1.278, memory: 6545, loss_rpn_cls: 0.0042, loss_rpn_bbox: 0.0040, loss_cls: 0.0270, acc: 98.7598, loss_bbox: 0.0530, loss: 0.0882
2023-03-15 10:40:34,221 - mmdet - INFO - Epoch [9][10/15]	lr: 5.175e-04, eta: 0:00:31, time: 0.917, data_time: 0.043, memory: 6545, loss_rpn_cls: 0.0039, loss_rpn_bbox: 0.0039, loss_cls: 0.0218, acc: 99.1016, loss_bbox: 0.0469, loss: 0.0766
2023-03-15 10:40:38,796 - mmdet - INFO - Exp name: faster_rcnn_r50_fpn_1x_Xray.py
2023-03-15 10:40:38,796 - mmdet - INFO - Epoch [9][15/15]	lr: 5.375e-04, eta: 0:00:23, time: 0.913, data_time: 0.045, memory: 6545, loss_rpn_cls: 0.0062, loss_rpn_bbox: 0.0037, loss_cls: 0.0226, acc: 99.1309, loss_bbox: 0.0445, loss: 0.0770
2023-03-15 10:40:50,233 - mmdet - INFO - Epoch [10][5/15]	lr: 5.574e-04, eta: 0:00:15, time: 2.196, data_time: 1.282, memory: 6545, loss_rpn_cls: 0.0035, loss_rpn_bbox: 0.0039, loss_cls: 0.0212, acc: 99.2773, loss_bbox: 0.0443, loss: 0.0728
2023-03-15 10:40:54,815 - mmdet - INFO - Epoch [10][10/15]	lr: 5.774e-04, eta: 0:00:07, time: 0.917, data_time: 0.045, memory: 6545, loss_rpn_cls: 0.0020, loss_rpn_bbox: 0.0036, loss_cls: 0.0202, acc: 99.2773, loss_bbox: 0.0456, loss: 0.0715
2023-03-15 10:40:59,401 - mmdet - INFO - Exp name: faster_rcnn_r50_fpn_1x_Xray.py
2023-03-15 10:40:59,401 - mmdet - INFO - Epoch [10][15/15]	lr: 5.974e-04, eta: 0:00:00, time: 0.916, data_time: 0.046, memory: 6545, loss_rpn_cls: 0.0023, loss_rpn_bbox: 0.0035, loss_cls: 0.0186, acc: 99.2871, loss_bbox: 0.0430, loss: 0.0674
2023-03-15 10:40:59,636 - mmdet - INFO - Saving checkpoint at 10 epochs
